@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix r: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
# @prefix r: <http://www.example.org#>.

# eye:
#    - @prefix r: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>. --> finds only 'pre:c' solution
#    - @prefix r: <http://www.example.org#>. --> finds 'pre:a' and 'pre:c' solution

# vampire:
#    - @prefix r: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>. --> finds 'pre:a' and 'pre:c' solution
#    - @prefix r: <http://www.example.org#>. --> finds 'pre:a' and 'pre:c' solution

# both: without the additional constraints --> finds only 'pre:c' solution

# Question: Why? Does eye not find <pre:a> or does it not show <pre:a> due to equality?
#     - if it doesn't find <pre:a>, it doesn't have the functional rdf:first restriction

(_:BN_1 _:BN_2 _:BN_3 _:t) log:onPositiveSurface {
   (_:A _:B _:first _:first1 _:p) log:onNegativeSurface {
      () log:onNegativeSurface {
         _:B _:p _:first1.
      }.
      _:B _:p _:first.
      _:A r:first _:first.
      _:A r:first _:first1.
   }.

   (_:A _:B _:first _:first1 _:p) log:onNegativeSurface {
      () log:onNegativeSurface {
         _:first1 _:p _:B.
      }.
      _:first _:p _:B.
      _:A r:first _:first.
      _:A r:first _:first1.
   }.

   _:t <pre:predicate> _:BN_1.

   # ( :a :b :c )
   _:BN_1 r:first <pre:a>.
   _:BN_1 r:rest _:BN_2.
   _:BN_2 r:first <pre:b>.
   _:BN_2 r:rest _:BN_3.
   _:BN_3 r:first <pre:c>.
   _:BN_3 r:rest r:nil.

   _:BN_1 r:first <pre:c>.

   <pre:c> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <pre:cat>.
   #<pre:a> <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <pre:dog>.

}.

(_:A _:B) log:onQuerySurface {
    _:A <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> _:B.
}.

