# Peano arithmetic
# See https://en.wikipedia.org/wiki/Peano_axioms
# Alternative which works
# @prefix r: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .


@prefix log: <http://www.w3.org/2000/10/swap/log#>.
@prefix : <http://example.org/ns#>.
@prefix r: <http://example.org/lists#>.

(_:first _:rest) log:onNegativeSurface {
     (_:A) log:onNegativeSurface {
       _:A r:first _:first; r:rest _:rest.
    }.
}.

(_:A _:B _:first _:rest _:p _:o) log:onNegativeSurface {
    () log:onNegativeSurface {
    _:B _:p _:o.
    }.
    _:A _:p _:o.

    _:A r:first _:first; r:rest _:rest.
    _:B r:first _:first; r:rest _:rest.
}.

(_:A _:B _:first _:rest _:p _:s) log:onNegativeSurface {
    () log:onNegativeSurface {
    _:s _:p _:B.
    }.
    _:s _:p _:A.

    _:A r:first _:first; r:rest _:rest.
    _:B r:first _:first; r:rest _:rest.
}.


(_:A _:B _:A1 _:B1 _:first _:rest _:p _:first1 _:rest1) log:onNegativeSurface {
    () log:onNegativeSurface {
    _:B1 _:p _:B.
    }.
    _:A1 _:p _:A.

    _:A r:first _:first; r:rest _:rest.
    _:B r:first _:first; r:rest _:rest.

    _:A1 r:first _:first1; r:rest _:rest1.
    _:B1 r:first _:first1; r:rest _:rest1.
}.

(_:A) log:onNegativeSurface {
    (_:l _:l1) log:onNegativeSurface {
    _:l r:first _:A.
    _:l r:rest _:l1.
    _:l1 r:first 0.
    _:l1 r:rest r:nil.
    _:l :add _:A.
    }.
}.

(_:A _:B _:C _:l4 _:l41) log:onNegativeSurface {
    (_:l1 _:l2 _:l11 _:l21 _:l3 _:l31) log:onNegativeSurface {

      _:l1 r:first _:A; r:rest _:l11.
      _:l11 r:first _:l2; r:rest r:nil.

      _:l2 r:first :s; r:rest _:l21.
      _:l21 r:first _:B; r:rest r:nil.

      _:l3 r:first :s; r:rest _:l31.
      _:l31 r:first _:C; r:rest r:nil.

      _:l1 :add _:l3.

    }.
    _:l4 r:first _:A; r:rest _:l41.
    _:l41 r:first _:B; r:rest r:nil.

    _:l4 :add _:C.
}.

(_:A) log:onNegativeSurface {
    (_:l1 _:l11) log:onNegativeSurface {
        _:l1 r:first _:A; r:rest _:l11.
        _:l11 r:first 0; r:rest r:nil.

        _:l1 :multiply 0.
    }.
}.

(_:A _:B _:C _:D _:l3 _:l31 _:l4 _:l41) log:onNegativeSurface {
    (_:l1 _:l2 _:l11 _:l21) log:onNegativeSurface {
       _:l1 r:first _:A; r:rest _:l11.
       _:l11 r:first _:l2; r:rest r:nil.

       _:l2 r:first :s; r:rest _:l21.
       _:l21 r:first _:B; r:rest r:nil.

       _:l1 :multiply _:C.
    }.
    _:l3 r:first _:A; r:rest _:l31.
    _:l31 r:first _:B; r:rest r:nil.

    _:l3 :multiply _:D.

    _:l4 r:first _:A; r:rest _:l41.
    _:l41 r:first _:D; r:rest r:nil.

    _:l4 :add _:C.
}.

 # ((:s 0) 0) :multiply 0.
(_:l01 _:l02 _:l011 _:l012) log:onQuerySurface {
      _:l01 r:first _:l011; r:rest _:l02.
      _:l02 r:first 0; r:rest r:nil.
      _:l011 r:first :s; r:rest _:l012.
      _:l012 r:first 0; r:rest r:nil.
      _:l01 :multiply 0.
}.